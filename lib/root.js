'use strict';

const fsp = require('fs').promises;
const { completed } = require('../helpers');

const husky =
`{\n\t"hooks": {\n\t\t"pre-push": "npm run size && npm run lint"\n\t}\n}\n`;

const gitignore = `*.log\n*.css.map\n.DS_Store\n.cache/\nThumbs.db\nnode_modules/\npublic/\nresources/\n.env.local\n\n# CMS\ncontent/\ndata/\n`;

const env = `# SECRET_VARIABLES\nDATO_API_TOKEN=XXXX\n`;

const bundle = `{\n\t"files": [\n\t\t{\n\t\t\t"path": "./public/dist/main.min.js",\n\t\t\t"maxSize": "14 kB"\n\t\t},\n\t\t{\n\t\t\t"path": "./public/styles/main.min.css",\n\t\t\t"maxSize": "14 kB"\n\t\t}\n\t]\n}\n`;

const config = `## Site Variables ##\nbaseURL: site.com\ntitle: title\ndescription: description\nauthor:\n\tname: you\n\n## Params ##\nparams:\n\t# Theme\n\ttheme: &thm "#fff"\n\n\t# Favicons\n\tfavicons:\n\t\t- rel: apple-touch-icon\n\t\t\thref: img/apple-touch-icon.png\n\t\t- rel: icon\n\t\t\thref: img/favicon-192x192.png\n\t\t\ttype: image/png\n\t\t\tsizes: 192x192\n\t\t- rel: icon\n\t\t\thref: img/favicon-96x96.png\n\t\t\ttype: image/png\n\t\t\tsizes: 96x96\n\t\t- rel: icon\n\t\t\thref: img/favicon.svg\n\t\t\ttype: image/svg+xml\n\t\t- rel: mask-icon\n\t\t\thref: img/pinned-tab.svg\n\t\t\tcolor: *thm\n\n\t# Browserconfig\n\tbconfig:\n\t\ts150: img/Square150x150Logo.scale-100.png\n\t\ts310: img/Square310x310Logo.scale-100.png\n\t\tw310: img/Wide310x150Logo.scale-100.png\n\n\t# Manifest\n\tmanifest:\n\t\ts192: img/android-chrome-192x192.png\n\t\ts256: img/android-chrome-256x256.png\n\t\n\t# Image\n\timage:\n\t\tsrc: img/og.png\n\t\ttype: image/png\n\t\twidth: 1200\n\t\theight: 628\n\n\n## Markup ##\nmarkup:\n\tgoldmark:\n\t\tparser:\n\t\t\tautoHeadingID: false\n\t\trenderer:\n\t\t\tunsafe: true\n\n\n## Sitemap ##\nsitemap:\n\tchangefreq: weekly\n\tfilename: sitemap.xml\n\tpriority: 0.9\n\n\n## Build ##\nenableGitInfo: true\nenableRobotsTXT: true\ndisableHugoGeneratorInject: true\ndisableKinds:\n\t- taxonomy\n\t- taxonomyTerm\n\t- RSS\nenableEmoji: true\nrelativeURLs: true\n`;

const netlify = `[build]\nbase = "/"\npublish = "/public"\ncommand = "npm run build"\n\n[build.environment]\nNODE_VERSION = "15.3.0"\nHUGO_VERSION = "0.79.0"\nNODE_ENV = "production"\n\n\n[[headers]]\nfor = "/*"\n\n[headers.values]\ncache-control = '''\n\tpublic,\n\tmax-age=5256000'''\n`;

const readme = `### Site\n`;

const ts = `{\n\t"compilerOptions": {\n\t\t"target": "ES2015",\n\t\t"lib": [\n\t\t\t"ESNext",\n\t\t\t"DOM",\n\t\t\t"DOM.Iterable",\n\t\t],\n\t\t"moduleResolution": "node",\n\t\t"outDir": "assets/dist/",\n\t\t"strict": true,\n\t\t"noImplicitAny": true,\n\t\t"module": "ESNext",\n\t\t"allowJs": false,\n\t\t"removeComments": true,\n\t\t"downlevelIteration": true,\n\t\t"sourceMap": true,\n\t\t"baseUrl": "assets/scripts/",\n\t\t"rootDir": "assets/scripts/",\n\t\t"allowSyntheticDefaultImports": true,\n\t},\n\t"exclude": ["node_modules"],\n\t"include": ["**/*.ts"],\n}\n`;

const dato = `'use strict';\n\nmodule.exports = (dato, root) => {\n\tconst { home, contact, footer, site } = dato;\n\tconst { siteName, titleSuffix, fallbackSeo } = site.globalSeo;\n\n\tconst nav = [];\n\n\troot.createDataFile('data/site.yaml', 'yaml', {\n\t\ttitle: siteName,\n\t\tsuffix: titleSuffix,\n\t\tdescription: fallbackSeo.description,\n\t\tnav,\n\t});\n\n\troot.createDataFile('data/contact.yaml', 'yaml', {\n\t\temail: contact.email,\n\t\tphone: contact.phone,\n\t\tfax: contact.fax,\n\t\tstreet: contact.street,\n\t\tcity: contact.city,\n\t\tstate: contact.state,\n\t\tzip: contact.zip,\n\t});\n\n\troot.createDataFile('data/footer.yaml', 'yaml', {\n\t\tcopyright: footer.copyright,\n\t});\n\n\troot.createPost('content/_index.md', 'yaml', {\n\t\tfrontmatter: {\n\t\t\ttitle: home.title,\n\t\t\tdescription: home.description,\n\t\t},\n\t\tcontent: home.about.content,\n\t});\n};\n`;

const esignore = `**/*.js\n`;

const eslint = `root: true\nenv:\n\tbrowser: true\n\tnode: true\n\tes6: true\n\tcommonjs: true\nparser: '@typescript-eslint/parser'\nparserOptions:\n\tecmaVersion: 2019\n\tsourceType: module\nextends:\n\t- 'eslint:recommended'\n\t- 'plugin:@typescript-eslint/recommended'\nrules:\n# Fixable\n\tcurly:\n\t\t- error\n\t\t- multi-line\n\tno-extra-parens: off\n\tdot-location: error\n\tdot-notation: error\n\teqeqeq: error\n\tno-else-return: error\n\tno-extra-bind: error\n\tno-extra-label: error\n\tno-floating-decimal: error\n\tno-implicit-coercion: error\n\tno-multi-spaces: error\n\tno-useless-return: error\n\twrap-iife: off\n\tyoda: off\n\tstrict:\n\t\t- error\n\t\t- never\n\tno-undef-init: error\n\tarray-bracket-newline:\n\t\t- error\n\t\t- consistent\n\tarray-bracket-spacing: error\n\tarray-element-newline:\n\t\t- error\n\t\t- consistent\n\tblock-spacing:\n\t\t- error\n\t\t- always\n\tbrace-style:\n\t\t- error\n\t\t- 1tbs\n\t\t- allowSingleLine: true\n\tcapitalized-comments: off\n\tcomma-dangle:\n\t\t- error\n\t\t- always-multiline\n\tcomma-spacing: error\n\tcomma-style:\n\t\t- error\n\t\t- last\n\tcomputed-property-spacing: error\n\teol-last: error\n\tfunc-call-spacing: error\n\timplicit-arrow-linebreak: error\n\tindent:\n\t\t- error\n\t\t- 2\n\tjsx-quotes: error\n\tkey-spacing: error\n\tkeyword-spacing:\n\t\t- error\n\t\t- after: true\n\t\t\tbefore: true\n\tlinebreak-style:\n\t\t- error\n\t\t- unix\n\tlines-around-comment: error\n\tlines-between-class-members: error\n\tmultiline-comment-style: off\n\tnew-parens: error\n\tnewline-per-chained-call: error\n\tno-lonely-if: off\n\tno-multiple-empty-lines:\n\t\t- error\n\t\t- max: 3\n\tno-trailing-spaces: error\n\tno-unneeded-ternary: warn\n\tno-whitespace-before-property: error\n\tnonblock-statement-body-position: error\n\tobject-curly-newline:\n\t\t- error\n\t\t- minProperties: 3\n\t\t\tconsistent: true\n\tobject-curly-spacing:\n\t\t- error\n\t\t- always\n\tobject-property-newline: error\n\tone-var:\n\t\t- error\n\t\t- let: never\n\t\t\tconst: never\n\t\t\tseparateRequires: true\n\tone-var-declaration-per-line: error\n\toperator-assignment: error\n\toperator-linebreak: error\n\tpadded-blocks: off\n\tprefer-object-spread: error\n\tquote-props: off\n\tquotes:\n\t\t- error\n\t\t- single\n\tsemi:\n\t\t- error\n\t\t- always\n\tsemi-spacing: error\n\tsemi-style: error\n\tsort-vars: off\n\tspace-before-blocks: off\n\tspace-before-function-paren: off\n\tspace-in-parens:\n\t\t- error\n\t\t- never\n\tspace-infix-ops: error\n\tspace-unary-ops: error\n\tspaced-comment:\n\t\t- error\n\t\t- always\n\tswitch-colon-spacing: error\n\ttemplate-tag-spacing: error\n\tunicode-bom:\n\t\t- error\n\t\t- never\n\twrap-regex: error\n\tarrow-body-style: error\n\tarrow-parens:\n\t\t- error\n\t\t- as-needed\n\tarrow-spacing: error\n\tgenerator-star-spacing: error\n\tno-confusing-arrow: error\n\tno-useless-computed-key: error\n\tno-useless-rename: error\n\tno-var: error\n\tobject-shorthand: error\n\tprefer-arrow-callback: off\n\tprefer-const: off\n\tprefer-destructuring: error\n\tprefer-numeric-literals: error\n\tprefer-template: error\n\trest-spread-spacing: error\n\tsort-imports:\n\t\t- error\n\t\t- ignoreCase: true\n\t\t\tignoreDeclarationSort: true\n\t\t\tignoreMemberSort: true\n\ttemplate-curly-spacing: error \n\tyield-star-spacing: error\n\tpadding-line-between-statements:\n\t\t- error\n\t\t- blankLine: always\n\t\t\tprev:\n\t\t\t\t- block-like\n\t\t\tnext: '*'\n\t\t- blankLine: always\n\t\t\tprev:\n\t\t\t\t- let\n\t\t\t\t- const\n\t\t\tnext: block-like\n\t\t- blankLine: always\n\t\t\tprev: '*'\n\t\t\tnext:\n\t\t\t\t- return\n\t\t\t\t- block-like\n\n# Rest\n\taccessor-pairs: off\n\tarray-callback-return: error\n\tblock-scoped-var: error\n\tcallback-return: error\n\tcamelcase: error\n\tclass-methods-use-this: error\n\tcomplexity: error\n\tconsistent-return: error\n\tconsistent-this: error\n\tdefault-case: error\n\tfunc-name-matching: error\n\tfunc-names:\n\t\t- error\n\t\t- always\n\tfunc-style: error\n\tfunction-paren-newline:\n\t\t- error\n\t\t- minItems: 4\n\tglobal-require: error\n\tguard-for-in: error\n\thandle-callback-err: error\n\tid-blacklist: error\n\tid-length: off\n\tid-match: error\n\tinit-declarations: off\n\tline-comment-position: error\n\tmax-depth: error\n\tmax-len:\n\t\t- error\n\t\t- ignoreTemplateLiterals: true\n\t\t\tignoreStrings: true\n\t\t\tignoreUrls: true\n\t\t\tignorePattern: "<.+"\n\tmax-lines: error\n\tmax-nested-callbacks: error\n\tmax-params: error\n\tmax-statements: off\n\tmax-statements-per-line: error\n\tmultiline-ternary: off\n\tnew-cap: error\n\tno-alert: error\n\tno-array-constructor: error\n\tno-await-in-loop: error\n\tno-bitwise: error\n\tno-buffer-constructor: error\n\tno-caller: error\n\tno-continue: error\n\tno-div-regex: error\n\tno-duplicate-imports: error\n\tno-empty-function: error\n\tno-eq-null: error\n\tno-eval: error\n\tno-extend-native: error\n\tno-implicit-globals: error\n\tno-implied-eval: error\n\tno-inline-comments: error\n\tno-invalid-this: error\n\tno-iterator: error\n\tno-label-var: error\n\tno-labels: error\n\tno-lone-blocks: error\n\tno-loop-func: error\n\tno-magic-numbers: off\n\tno-mixed-operators: error\n\tno-mixed-requires: error\n\tno-multi-assign: error\n\tno-multi-str: error\n\tno-negated-condition: off\n\tno-nested-ternary: error\n\tno-new: error\n\tno-new-func: error\n\tno-new-object: error\n\tno-new-require: error\n\tno-new-wrappers: error\n\tno-octal-escape: error\n\tno-param-reassign: error\n\tno-path-concat: error\n\tno-plusplus: error\n\tno-process-env: error\n\tno-process-exit: error\n\tno-proto: error\n\tno-prototype-builtins: error\n\tno-restricted-globals: error\n\tno-restricted-imports: error\n\tno-restricted-modules: error\n\tno-restricted-properties: error\n\tno-restricted-syntax: error\n\tno-return-assign: error\n\tno-return-await: error\n\tno-script-url: error\n\tno-self-compare: error\n\tno-sequences: error\n\tno-shadow: error\n\tno-shadow-restricted-names: error\n\tno-sync: error\n\tno-tabs: error\n\tno-template-curly-in-string: error\n\tno-ternary: off\n\tno-throw-literal: error\n\tno-undefined: error\n\tno-underscore-dangle: error\n\tno-unmodified-loop-condition: error\n\tno-unused-expressions: off\n\tno-use-before-define: error\n\tno-useless-call: error\n\tno-useless-concat: error\n\tno-useless-constructor: error\n\tno-void: error\n\tno-warning-comments: error\n\tno-with: error\n\tprefer-promise-reject-errors: error\n\tprefer-rest-params: error\n\tprefer-spread: error\n\tradix:\n\t\t- error\n\t\t- as-needed\n\trequire-await: error\n\tsort-keys: off\n\tsymbol-description: error\n\tvars-on-top: error\n\n\t# Plugins\n\t'@typescript-eslint/no-var-requires': off\n\t'@typescript-eslint/no-explicit-any': off\n\t'@typescript-eslint/no-non-null-assertion': off\n\t'@typescript-eslint/ban-ts-comment': off\n`;

const rootFiles = async dir => {
  await fsp.writeFile(`${dir}/.huskyrc`, husky);
  await fsp.writeFile(`${dir}/.gitignore`, gitignore);
  await fsp.writeFile(`${dir}/.env.local`, env);
  await fsp.writeFile(`${dir}/.eslintignore`, esignore);
  await fsp.writeFile(`${dir}/.eslintrc.yaml`, eslint);
  await fsp.writeFile(`${dir}/bundlesize.config.json`, bundle);
  await fsp.writeFile(`${dir}/config.yaml`, config);
  await fsp.writeFile(`${dir}/netlify.toml`, netlify);
  await fsp.writeFile(`${dir}/README.md`, readme);
  await fsp.writeFile(`${dir}/tsconfig.json`, ts);
  await fsp.writeFile(`${dir}/dato.config.js`, dato);
  
  completed('Root files');
}

module.exports = rootFiles;
